{"version":3,"sources":["components/ImageForm.jsx","components/ImageList.jsx","components/ImageBoard.jsx","reportWebVitals.js","index.js"],"names":["ImageForm","prop","useState","imageURL","setImageURL","imageCaption","setImageCaption","onSubmit","event","preventDefault","addImage","name","type","id","value","onChange","target","placeholder","ImageList","props","imagesHTML","images","map","image","src","url","alt","text","ImageBoard","setImages","counter","setCounter","useEffect","newImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAmCeA,MAjCf,SAAmBC,GACf,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAmBA,OACI,uBAAMC,SAjBV,SAAsBC,GAClBA,EAAMC,iBACNR,EAAKS,SAASP,EAAUE,GACxBD,EAAY,IACZE,EAAgB,KAahB,UACI,6BACI,sDAEJ,uBAAOK,KAAK,MAAMC,KAAK,MAAMC,GAAG,kBAAkBC,MAAOX,EAAUY,SAd3E,SAAsBP,GAClBJ,EAAYI,EAAMQ,OAAOF,QAasEG,YAAY,cACvG,uBAAON,KAAK,OAAOC,KAAK,OAAOC,GAAG,wBAAwBC,MAAOT,EAAcU,SAXvF,SAA0BP,GACtBF,EAAgBE,EAAMQ,OAAOF,QAUkFG,YAAY,sBACvH,wBAAQL,KAAK,SAAb,qBCXGM,MAlBf,SAAmBC,GAEf,IAAMC,EAAaD,EAAME,OAAOC,KAAI,SAAAC,GAChC,OACI,+BACI,qBAAKC,IAAKD,EAAME,IAAKC,IAAI,KACzB,4BAAIH,EAAMI,SAFLJ,EAAMV,OAOvB,OACI,6BACKO,KCwBEQ,MAlCf,WACI,MAA4B1B,mBAAS,IAArC,mBAAOmB,EAAP,KAAeQ,EAAf,KACA,EAA8B3B,mBAAS,CAAC,IAAxC,mBAAO4B,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,qBAAU,WACNH,EAAW,CACT,CACIhB,GAAG,EACHY,IAAK,sEACLE,KAAM,wBACP,CACCd,GAAG,EACHY,IAAK,oJACLE,KAAM,sBAGb,IAUC,gCACI,6CACA,cAAC,EAAD,CAAWjB,SATnB,SAAkBe,EAAIE,GAClB,IAAMM,EAAW,CAAEpB,GAAGiB,EAASL,MAAKE,QACpCE,EAAU,GAAD,mBAAKR,GAAL,CAAaY,KACtBF,EAAWD,EAAU,MAOjB,cAAC,EAAD,CAAWT,OAAQA,QCrBhBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd92a7c5.chunk.js","sourcesContent":[" import { useState } from 'react';\n\nfunction ImageForm(prop) {\n    const [imageURL, setImageURL] = useState(\"\"); //image url needs to be returned as a string\n    const [imageCaption, setImageCaption] = useState(\"\"); //caption is also a string\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        prop.addImage(imageURL, imageCaption);\n        setImageURL('');\n        setImageCaption('');\n    }\n\n    function handleNewURL(event) {\n        setImageURL(event.target.value);\n    }\n\n    function handleNewCaption(event) {\n        setImageCaption(event.target.value);\n    }\n\n    \n    return (\n        <form onSubmit={handleSubmit}> \n            <h2>\n                <label> Add An Image: </label>\n            </h2>\n            <input name=\"url\" type=\"url\" id=\"new-image-input\" value={imageURL} onChange={handleNewURL} placeholder=\"Image URL\"/>\n            <input name=\"text\" type=\"text\" id=\"new-image-description\" value={imageCaption} onChange={handleNewCaption} placeholder=\"Image Description\"/>\n            <button type=\"submit\">Add</button>\n        </form>\n    )\n}\n\nexport default ImageForm ","\nfunction ImageList(props) {\n    \n    const imagesHTML = props.images.map(image => {\n        return (\n            <li key={image.id}>\n                <img src={image.url} alt=\"\"/>\n                <p>{image.text}</p>\n            </li>\n        )\n    });\n    \n    return (\n        <ul>\n            {imagesHTML}\n        </ul>\n    )\n}\n\nexport default ImageList\n\n\n//<img src =\"https://www.romanticasheville.com/sites/default/files/images/basic_page/blue_ridge_mountains_NC.jpg\" alt=\"Blue Ridge Mountains\"/>\n//<p> Blue Ridge Mountains </p>","import {useState, useEffect} from 'react';\nimport ImageForm from \"./ImageForm\";\nimport ImageList from \"./ImageList\";\n\nfunction ImageBoard() {\n    const [images, setImages] = useState([])\n    const [counter, setCounter] = useState([3])\n\n    useEffect(() => {\n        setImages ([\n          {\n              id:1,\n              url: \"https://i.natgeofe.com/n/2a832501-483e-422f-985c-0e93757b7d84/6.jpg\",\n              text: \"Long Road to Nowhere\",\n          }, {\n              id:2,\n              url: \"https://www.adobe.com/content/dam/cc/us/en/creative-cloud/photography/discover/landscape-photography/CODERED_B1_landscape_P2d_714x348.jpg.img.jpg\",\n              text: \"Long Boardwalk\",\n          }  \n        ])\n    }, []);\n\n\n    function addImage(url,text) {\n        const newImage = { id:counter, url ,text }\n        setImages([...images, newImage]);\n        setCounter(counter + 1);\n    }\n\n    return (\n        <div>\n            <h1>Image Board</h1>\n            <ImageForm addImage={addImage}/>\n            <ImageList images={images}/>\n        </div>\n    )\n}\n\nexport default ImageBoard","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ImageBoard from './components/ImageBoard.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}